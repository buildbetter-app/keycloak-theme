{"version":3,"file":"Register-7FvK46e5.js","sources":["../../src/keycloak-theme/login/pages/Register.tsx"],"sourcesContent":["// ejected using 'npx eject-keycloak-page'\nimport { useState, useEffect, type FormEventHandler } from \"react\";\nimport type { PageProps } from \"keycloakify/login/pages/PageProps\";\nimport type { KcContext } from \"../kcContext\";\nimport type { I18n } from \"../i18n\";\nimport { useConstCallback } from \"keycloakify/tools/useConstCallback\";\nimport { HeaderNode } from \"../components/header-node\";\nimport { AbsoluteCenter, Box, Divider, Flex, FormErrorMessage, Input, Spacer, } from \"@chakra-ui/react\";\nimport { SubmitInput } from \"../components/submit-input\";\nimport { BackTo } from \"../components/back-to-login\";\nimport { SocialProvider } from \"../components/social-provider\";\n\nexport default function Register(props: PageProps<Extract<KcContext, { pageId: \"register.ftl\" }>, I18n>) {\n    const { kcContext, i18n, doUseDefaultCss, Template, classes } = props;\n\n    const { url, register, realm, passwordRequired, recaptchaRequired, recaptchaSiteKey, social } = kcContext;\n\n    const queryParameters = new URLSearchParams(window.location.search);\n\n    const [email, setEmail] = useState(register.formData.email ?? (queryParameters.get(\"email\") ?? \"\"));\n    const [firstName, setFirstName] = useState(register.formData.firstName ?? \"\");\n    const [lastName, setLastName] = useState(register.formData.lastName ?? \"\");\n    const [password, setPassword] = useState(\"\");\n    const [passwordConfirm, setPasswordConfirm] = useState(\"\");\n    const [errors, setErrors] = useState({} as { firstName: string, lastName: string, email: string, password: string, passwordConfirm: string });\n    const [wasSubmitted, setWasSubmitted] = useState(false);\n\n    const validateNames = (names: string) => {\n        if (!names)\n            return \"Required\";\n        return \"\";\n    }\n\n    const validateEmail = () => {\n        if (!email) {\n            return \"Required\";\n        } else if (!/^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/g.test(email)) {\n            return \"Invalid email address\";\n        }\n        return \"\";\n    };\n\n    const validatePassword = () => {\n        if (!password) {\n            return \"Required\";\n        } else if (password.length < 8) {\n            return \"Password must be at least 8 characters\";\n        }\n        return \"\";\n    };\n    const validatePasswordConfirm = () => {\n        if (!passwordConfirm) {\n            return \"Required\";\n        } else if (password !== passwordConfirm) {\n            return \"Passwords do not match\";\n        }\n        return \"\";\n    };\n    const validateForm = () => {\n        setErrors({\n            firstName: validateNames(firstName),\n            lastName: validateNames(lastName),\n            email: validateEmail(),\n            password: validatePassword(),\n            passwordConfirm: validatePasswordConfirm()\n        });\n    }\n\n    const onSubmit = useConstCallback<FormEventHandler<HTMLFormElement>>(e => {\n        e.preventDefault();\n        setWasSubmitted(true);\n        const formElement = e.target as HTMLFormElement;\n        if (formElement.checkValidity() === true) {\n            formElement.submit();\n        }\n        else {\n            validateForm();\n        }\n\n    });\n    useEffect(() => {\n        if (wasSubmitted) {\n            validateForm();\n        }\n    }, [firstName, lastName, email, password, passwordConfirm]);\n    return (\n        <Template {...{ kcContext, i18n, doUseDefaultCss, classes }} headerNode={\n            <HeaderNode title=\"Join BuildBetter\" subtitle=\"Make better product decisions, 5x faster.\" />\n        }>\n            <form id=\"kc-register-form\" className=\"space-y-2\" action={url.registrationAction} method=\"post\" onSubmit={(e) => { e.preventDefault(); e.stopPropagation(); onSubmit(e) }} noValidate>\n                <Input\n                    type=\"text\"\n                    id=\"firstName\"\n                    name=\"firstName\"\n                    defaultValue={firstName}\n                    placeholder=\"First name\"\n                    autoComplete=\"given-name\"\n                    onChange={(e) => setFirstName((e.target as HTMLInputElement).value)}\n                    required\n                />\n                {!!errors.firstName ? (\n                    <FormErrorMessage >{errors.firstName}</FormErrorMessage>\n                ) : null}\n\n                <Input\n                    type=\"text\"\n                    id=\"lastName\"\n                    name=\"lastName\"\n                    defaultValue={lastName}\n                    autoComplete=\"family-name\"\n                    placeholder=\"Last name\"\n                    onChange={(e) => setLastName((e.target as HTMLInputElement).value)}\n                    required\n                />\n                {!!errors.lastName ? (\n                    <FormErrorMessage >{errors.lastName}</FormErrorMessage>\n                ) : null}\n\n                <Input\n                    type=\"email\"\n                    id=\"email\"\n                    name=\"email\"\n                    defaultValue={email}\n                    autoComplete=\"email\"\n                    placeholder=\"Email\"\n                    required\n                    onChange={(e) => setEmail((e.target as HTMLInputElement).value)}\n                />\n                {!!errors.email ? (\n                    <FormErrorMessage >{errors.email}</FormErrorMessage>\n                ) : null}\n                {!realm.registrationEmailAsUsername && (\n\n                    <Input\n                        type=\"text\"\n                        id=\"username\"\n                        name=\"username\"\n                        defaultValue={register.formData.username ?? \"\"}\n                        autoComplete=\"username\"\n                        placeholder=\"Username\"\n                    />\n                )}\n                {passwordRequired && (\n                    <>\n                        <Input\n                            type=\"password\"\n                            id=\"password\"\n                            name=\"password\"\n                            autoComplete=\"new-password\"\n                            placeholder=\"Password\"\n                            onChange={(e) => setPassword((e.target as HTMLInputElement).value)}\n                            required\n                            minLength={8}\n                        />\n                        {!!errors.password ? <FormErrorMessage >{errors.password}</FormErrorMessage> : null}\n                        <Input type=\"password\" id=\"password-confirm\" name=\"password-confirm\"\n                            onChange={(e) => setPasswordConfirm((e.target as HTMLInputElement).value)}\n                            placeholder=\"Confirm Password\" required />\n                        {!!errors.passwordConfirm ? <FormErrorMessage >{errors.passwordConfirm}</FormErrorMessage> : null}\n                    </>\n                )}\n                {recaptchaRequired && (\n                    <div className=\"form-group\">\n                        <div >\n                            <div className=\"g-recaptcha\" data-size=\"compact\" data-sitekey={recaptchaSiteKey}></div>\n                        </div>\n                    </div>\n                )}\n                <Spacer />\n                <SubmitInput value=\"Create Account\" />\n                <Spacer />\n            </form>\n            <Box position='relative' py={4}>\n                <Divider />\n                <AbsoluteCenter opacity={0.5}>\n                    or\n                </AbsoluteCenter>\n            </Box>\n            <Flex direction='column' className='space-y-4 mt-4'>\n                {social && social.providers && social.providers.map((p) => <SocialProvider {...p} prefix=\"Sign up with \" key={p.providerId} />)}\n                <BackTo loginUrl={url.loginUrl} target=\"Login\" />\n            </Flex>\n        </Template >\n    );\n}\n\n"],"names":["Register","props","kcContext","i18n","doUseDefaultCss","Template","classes","url","register","realm","passwordRequired","recaptchaRequired","recaptchaSiteKey","social","queryParameters","email","setEmail","useState","firstName","setFirstName","lastName","setLastName","password","setPassword","passwordConfirm","setPasswordConfirm","errors","setErrors","wasSubmitted","setWasSubmitted","validateNames","names","validateEmail","validatePassword","validatePasswordConfirm","validateForm","onSubmit","useConstCallback","e","formElement","useEffect","HeaderNode","jsxs","jsx","Input","FormErrorMessage","Fragment","Spacer","SubmitInput","Box","Divider","AbsoluteCenter","Flex","p","createElement","SocialProvider","BackTo"],"mappings":"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"}