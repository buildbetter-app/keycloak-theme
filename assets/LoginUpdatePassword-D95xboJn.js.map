{"version":3,"file":"LoginUpdatePassword-D95xboJn.js","sources":["../../src/keycloak-theme/login/pages/LoginUpdatePassword.tsx"],"sourcesContent":["import type { PageProps } from \"keycloakify/login/pages/PageProps\";\nimport { useGetClassName } from \"keycloakify/login/lib/useGetClassName\";\nimport type { KcContext } from \"../kcContext\";\nimport type { I18n } from \"../i18n\";\nimport { useState, useEffect, FormEventHandler } from \"react\";\nimport { useConstCallback } from \"keycloakify/tools/useConstCallback\";\nimport { HeaderNode } from \"../components/header-node\";\nimport { PasswordIcon } from \"../components/icons/password\";\nimport { FormErrorMessage, Input } from \"@chakra-ui/react\";\nimport { SubmitInput } from \"../components/submit-input\";\n\nexport default function LoginUpdatePassword(props: PageProps<Extract<KcContext, { pageId: \"login-update-password.ftl\" }>, I18n>) {\n    const { kcContext, i18n, doUseDefaultCss, Template, classes } = props;\n\n    const { getClassName } = useGetClassName({\n        doUseDefaultCss,\n        classes\n    });\n\n    const { msg, msgStr } = i18n;\n\n    const { url, isAppInitiatedAction, } = kcContext;\n    const [password, setPassword] = useState(\"\");\n    const [passwordConfirm, setPasswordConfirm] = useState(\"\");\n    const [errors, setErrors] = useState({} as { password: string, passwordConfirm: string });\n    const [wasSubmitted, setWasSubmitted] = useState(false);\n\n    const validatePassword = () => {\n        if (!password) {\n            return \"Required\";\n        } else if (password.length < 8) {\n            return \"Password must be at least 8 characters\";\n        }\n        return \"\";\n    };\n    const validatePasswordConfirm = () => {\n        if (!passwordConfirm) {\n            return \"Required\";\n        } else if (password !== passwordConfirm) {\n            return \"Passwords do not match\";\n        }\n        return \"\";\n    };\n    const validateForm = () => {\n        setErrors({ password: validatePassword(), passwordConfirm: validatePasswordConfirm() });\n    }\n    const onSubmit = useConstCallback<FormEventHandler<HTMLFormElement>>(e => {\n        e.preventDefault();\n        setWasSubmitted(true);\n        const formElement = e.target as HTMLFormElement;\n        if (formElement.checkValidity() === true) {\n            formElement.submit();\n        }\n        else {\n            validateForm();\n        }\n\n    });\n    useEffect(() => {\n        if (wasSubmitted) {\n            validateForm();\n        }\n    }, [password, passwordConfirm]);\n\n    return (\n        <Template {...{ kcContext, i18n, doUseDefaultCss, classes }}\n            headerNode={\n                <HeaderNode title=\"Set New Password\" subtitle=\"Create your new strong password\" asset={\n                    <div className=\"flex justify-center\">\n                        <PasswordIcon w='60px' h='28px' />\n                    </div>} />\n            }>\n            <form id=\"kc-passwd-up-form\" className=\"space-y-4\" action={url.loginAction} method=\"post\" onSubmit={(e) => { e.preventDefault(); e.stopPropagation(); onSubmit(e) }} noValidate>\n                <Input type=\"password\" id=\"password\" name=\"password\" autoComplete=\"current-password\" style={{ display: \"none\" }} />\n                <Input\n                    type=\"password\"\n                    id=\"password-new\"\n                    name=\"password-new\"\n                    placeholder=\"New Password\"\n                    autoFocus\n                    autoComplete=\"new-password\"\n                    className={getClassName(\"kcInputClass\")}\n                    onChange={(e) => setPassword((e.target as HTMLInputElement).value)}\n                    required\n                    minLength={8}\n                />\n                {!!errors.password ? (\n                    <FormErrorMessage>{errors.password}</FormErrorMessage>\n                ) : null}\n\n                <Input\n                    type=\"password\"\n                    id=\"password-confirm\"\n                    name=\"password-confirm\"\n                    autoComplete=\"new-password\"\n                    placeholder=\"Confirm Password\"\n                    className={getClassName(\"kcInputClass\")}\n                    onChange={(e) => setPasswordConfirm((e.target as HTMLInputElement).value)}\n                    required\n                    minLength={8}\n                />\n                {!!errors.passwordConfirm ? (\n                    <FormErrorMessage>{errors.passwordConfirm}</FormErrorMessage>\n                ) : null}\n\n                <div className={getClassName(\"kcFormGroupClass\")}>\n                    <div id=\"kc-form-options\" className={getClassName(\"kcFormOptionsClass\")}>\n                        <div className={getClassName(\"kcFormOptionsWrapperClass\")}>\n                            {isAppInitiatedAction && (\n                                <div className=\"checkbox\">\n                                    <label>\n                                        <input type=\"checkbox\" id=\"logout-sessions\" name=\"logout-sessions\" value=\"on\" checked />\n                                        {msgStr(\"logoutOtherSessions\")}\n                                    </label>\n                                </div>\n                            )}\n                        </div>\n                    </div>\n\n                    <div id=\"kc-form-buttons\" className={getClassName(\"kcFormButtonsClass\")}>\n                        {isAppInitiatedAction ? (\n                            <>\n                                <SubmitInput\n                                    type=\"submit\"\n                                    defaultValue={msgStr(\"doSubmit\")}\n                                />\n                                <button\n                                    type=\"submit\"\n                                    name=\"cancel-aia\"\n                                    value=\"true\"\n                                >\n                                    {msg(\"doCancel\")}\n                                </button>\n                            </>\n                        ) : (\n                            <SubmitInput\n                                type=\"submit\"\n                            />\n                        )}\n                    </div>\n                </div>\n            </form>\n        </Template>\n    );\n}\n"],"names":["LoginUpdatePassword","props","kcContext","i18n","doUseDefaultCss","Template","classes","getClassName","useGetClassName","msg","msgStr","url","isAppInitiatedAction","password","setPassword","useState","passwordConfirm","setPasswordConfirm","errors","setErrors","wasSubmitted","setWasSubmitted","validatePassword","validatePasswordConfirm","validateForm","onSubmit","useConstCallback","formElement","useEffect","jsx","HeaderNode","PasswordIcon","jsxs","Input","FormErrorMessage","Fragment","SubmitInput"],"mappings":"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"}